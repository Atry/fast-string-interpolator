[info] Loading settings from idea.sbt,build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[success] Total time: 0 s, completed Mar 16, 2018, 11:37:12 AM
[info] Setting Scala version to 2.12.4 on 3 projects.
[info] Reapplying settings...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/classes ...
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.12/macros_2.12-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/benchmark_2.12-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 2 classes from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 14 Java sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/benchmark_2.12-0.1.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/benchmark_2.12-0.1.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc -rf json -rff jdk-9_scala-2.12.4.json .*
[error] WARNING: An illegal reflective access operation has occurred
[error] WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/tmp/sbt_dde88a34/target/5f9f9839/jmh-core-1.20.jar) to field java.io.PrintStream.charOut
[error] WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
[error] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[error] WARNING: All illegal access operations will be denied in a future release
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator
[info] # Run progress: 0.00% complete, ETA 00:01:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 220709.528 ops/s
[info] # Warmup Iteration   2: 455836.212 ops/s
[info] # Warmup Iteration   3: 523713.198 ops/s
[info] # Warmup Iteration   4: 531532.657 ops/s
[info] # Warmup Iteration   5: 531658.554 ops/s
[info] Iteration   1: 536318.516 ops/s
[info]                  ·gc.alloc.rate:                                  822.814 MB/sec
[info]                  ·gc.alloc.rate.norm:                             2416.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.009 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.028 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            597.874 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1755.518 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        2.000 ms
[info] Iteration   2: 529805.122 ops/s
[info]                  ·gc.alloc.rate:            813.135 MB/sec
[info]                  ·gc.alloc.rate.norm:       2416.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      897.117 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2665.529 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   3: 509827.635 ops/s
[info]                  ·gc.alloc.rate:            782.482 MB/sec
[info]                  ·gc.alloc.rate.norm:       2416.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      897.044 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2769.724 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   4: 525808.975 ops/s
[info]                  ·gc.alloc.rate:            807.090 MB/sec
[info]                  ·gc.alloc.rate.norm:       2416.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      598.129 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1790.481 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   5: 523696.243 ops/s
[info]                  ·gc.alloc.rate:            803.704 MB/sec
[info]                  ·gc.alloc.rate.norm:       2416.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      896.983 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2696.407 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator":
[info]   525091.298 ±(99.9%) 37714.262 ops/s [Average]
[info]   (min, avg, max) = (509827.635, 525091.298, 536318.516), stdev = 9794.274
[info]   CI (99.9%): [487377.036, 562805.560] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.alloc.rate":
[info]   805.845 ±(99.9%) 57.536 MB/sec [Average]
[info]   (min, avg, max) = (782.482, 805.845, 822.814), stdev = 14.942
[info]   CI (99.9%): [748.309, 863.381] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm":
[info]   2416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2416.001, 2416.001, 2416.001), stdev = 0.001
[info]   CI (99.9%): [2416.001, 2416.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.016 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.006 ±(99.9%) 0.048 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.028), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen":
[info]   777.429 ±(99.9%) 630.715 MB/sec [Average]
[info]   (min, avg, max) = (597.874, 777.429, 897.117), stdev = 163.795
[info]   CI (99.9%): [146.715, 1408.144] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   2335.532 ±(99.9%) 1983.313 B/op [Average]
[info]   (min, avg, max) = (1755.518, 2335.532, 2769.724), stdev = 515.060
[info]   CI (99.9%): [352.218, 4318.845] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fastInterpolator
[info] # Run progress: 10.00% complete, ETA 00:02:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2366366.780 ops/s
[info] # Warmup Iteration   2: 3612618.175 ops/s
[info] # Warmup Iteration   3: 3674063.634 ops/s
[info] # Warmup Iteration   4: 3674875.949 ops/s
[info] # Warmup Iteration   5: 3668659.331 ops/s
[info] Iteration   1: 3649581.690 ops/s
[info]                  ·gc.alloc.rate:                                  2133.613 MB/sec
[info]                  ·gc.alloc.rate.norm:                             920.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2393.111 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1031.894 B/op
[info]                  ·gc.count:                                       8.000 counts
[info]                  ·gc.time:                                        9.000 ms
[info] Iteration   2: 3633702.433 ops/s
[info]                  ·gc.alloc.rate:                                  2123.489 MB/sec
[info]                  ·gc.alloc.rate.norm:                             920.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.046 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       906.811 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        7.000 ms
[info] Iteration   3: 3716342.829 ops/s
[info]                  ·gc.alloc.rate:                                  2172.056 MB/sec
[info]                  ·gc.alloc.rate.norm:                             920.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.404 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       886.686 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 3679972.396 ops/s
[info]                  ·gc.alloc.rate:            2150.730 MB/sec
[info]                  ·gc.alloc.rate.norm:       920.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2093.072 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 895.336 B/op
[info]                  ·gc.count:                 7.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   5: 3669936.411 ops/s
[info]                  ·gc.alloc.rate:            2144.618 MB/sec
[info]                  ·gc.alloc.rate.norm:       920.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2092.892 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 897.811 B/op
[info]                  ·gc.count:                 7.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fastInterpolator":
[info]   3669907.152 ±(99.9%) 121485.958 ops/s [Average]
[info]   (min, avg, max) = (3633702.433, 3669907.152, 3716342.829), stdev = 31549.518
[info]   CI (99.9%): [3548421.193, 3791393.110] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fastInterpolator:·gc.alloc.rate":
[info]   2144.901 ±(99.9%) 70.934 MB/sec [Average]
[info]   (min, avg, max) = (2123.489, 2144.901, 2172.056), stdev = 18.421
[info]   CI (99.9%): [2073.967, 2215.835] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm":
[info]   920.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (920.000, 920.000, 920.000), stdev = 0.001
[info]   CI (99.9%): [920.000, 920.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.003 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen":
[info]   2153.105 ±(99.9%) 516.632 MB/sec [Average]
[info]   (min, avg, max) = (2092.892, 2153.105, 2393.111), stdev = 134.168
[info]   CI (99.9%): [1636.473, 2669.737] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   923.707 ±(99.9%) 234.511 B/op [Average]
[info]   (min, avg, max) = (886.686, 923.707, 1031.894), stdev = 60.902
[info]   CI (99.9%): [689.197, 1158.218] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fastInterpolator:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fastInterpolator:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 9.000), stdev = 1.789
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator
[info] # Run progress: 20.00% complete, ETA 00:02:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4343497.841 ops/s
[info] # Warmup Iteration   2: 6131350.920 ops/s
[info] # Warmup Iteration   3: 6379352.579 ops/s
[info] # Warmup Iteration   4: 6371350.389 ops/s
[info] # Warmup Iteration   5: 6350893.910 ops/s
[info] Iteration   1: 6419913.165 ops/s
[info]                  ·gc.alloc.rate:                                  619.757 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.037 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.009 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            593.928 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       145.665 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 6444834.762 ops/s
[info]                  ·gc.alloc.rate:                                  622.289 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.040 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.010 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            596.051 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       145.591 B/op
[info]                  ·gc.churn.G1_Survivor_Space:                     1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm:                0.488 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 6413521.864 ops/s
[info]                  ·gc.alloc.rate:                                  619.291 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.038 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.009 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            598.079 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       146.794 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        1.000 ms
[info] Iteration   4: 6439559.549 ops/s
[info]                  ·gc.alloc.rate:                                  621.722 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            597.980 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       146.196 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        2.000 ms
[info] Iteration   5: 6362909.614 ops/s
[info]                  ·gc.alloc.rate:            614.324 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      597.983 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 147.957 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator":
[info]   6416147.791 ±(99.9%) 125167.101 ops/s [Average]
[info]   (min, avg, max) = (6362909.614, 6416147.791, 6444834.762), stdev = 32505.499
[info]   CI (99.9%): [6290980.690, 6541314.892] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.alloc.rate":
[info]   619.477 ±(99.9%) 12.118 MB/sec [Average]
[info]   (min, avg, max) = (614.324, 619.477, 622.289), stdev = 3.147
[info]   CI (99.9%): [607.358, 631.595] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.023 ±(99.9%) 0.078 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.040), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.006 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen":
[info]   596.804 ±(99.9%) 7.004 MB/sec [Average]
[info]   (min, avg, max) = (593.928, 596.804, 598.079), stdev = 1.819
[info]   CI (99.9%): [589.800, 603.808] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   146.441 ±(99.9%) 3.756 B/op [Average]
[info]   (min, avg, max) = (145.591, 146.441, 147.957), stdev = 0.975
[info]   CI (99.9%): [142.684, 150.197] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.840] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.098 ±(99.9%) 0.840 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.098, 0.488), stdev = 0.218
[info]   CI (99.9%): [≈ 0, 0.938] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 5.000), stdev = 1.871
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator
[info] # Run progress: 30.00% complete, ETA 00:01:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4372162.478 ops/s
[info] # Warmup Iteration   2: 6069007.863 ops/s
[info] # Warmup Iteration   3: 6298730.133 ops/s
[info] # Warmup Iteration   4: 6289507.317 ops/s
[info] # Warmup Iteration   5: 6188626.984 ops/s
[info] Iteration   1: 6394203.592 ops/s
[info]                  ·gc.alloc.rate:                                  617.271 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.149 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.037 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            593.899 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       146.245 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 6364504.667 ops/s
[info]                  ·gc.alloc.rate:                   614.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             596.063 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        147.433 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.494 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 6395491.680 ops/s
[info]                  ·gc.alloc.rate:                                  617.513 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.048 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.012 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            598.026 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       147.203 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        1.000 ms
[info] Iteration   4: 6431395.924 ops/s
[info]                  ·gc.alloc.rate:                                  621.012 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            598.084 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       146.388 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        2.000 ms
[info] Iteration   5: 6435872.409 ops/s
[info]                  ·gc.alloc.rate:            621.506 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      598.129 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 146.283 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  1.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator":
[info]   6404293.654 ±(99.9%) 113809.141 ops/s [Average]
[info]   (min, avg, max) = (6364504.667, 6404293.654, 6435872.409), stdev = 29555.872
[info]   CI (99.9%): [6290484.514, 6518102.795] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.alloc.rate":
[info]   618.366 ±(99.9%) 11.146 MB/sec [Average]
[info]   (min, avg, max) = (614.528, 618.366, 621.506), stdev = 2.895
[info]   CI (99.9%): [607.220, 629.512] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.040 ±(99.9%) 0.248 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.149), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.287] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.010 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.037), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen":
[info]   596.840 ±(99.9%) 7.169 MB/sec [Average]
[info]   (min, avg, max) = (593.899, 596.840, 598.129), stdev = 1.862
[info]   CI (99.9%): [589.671, 604.009] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   146.710 ±(99.9%) 2.168 B/op [Average]
[info]   (min, avg, max) = (146.245, 146.710, 147.433), stdev = 0.563
[info]   CI (99.9%): [144.542, 148.878] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.840] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.099 ±(99.9%) 0.851 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.099, 0.494), stdev = 0.221
[info]   CI (99.9%): [≈ 0, 0.950] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 5.000), stdev = 2.049
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder
[info] # Run progress: 40.00% complete, ETA 00:01:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3907550.318 ops/s
[info] # Warmup Iteration   2: 5040606.238 ops/s
[info] # Warmup Iteration   3: 5159864.402 ops/s
[info] # Warmup Iteration   4: 5202520.278 ops/s
[info] # Warmup Iteration   5: 5270983.071 ops/s
[info] Iteration   1: 5196838.787 ops/s
[info]                  ·gc.alloc.rate:                                  1690.069 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1793.887 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       543.451 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 5356142.207 ops/s
[info]                  ·gc.alloc.rate:                                  1742.720 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.923 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       527.337 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 5302822.512 ops/s
[info]                  ·gc.alloc.rate:            1724.633 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1794.067 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 532.613 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   4: 5184339.621 ops/s
[info]                  ·gc.alloc.rate:                                  1685.980 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.005 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1494.923 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       453.980 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 5253915.400 ops/s
[info]                  ·gc.alloc.rate:                                  1708.732 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.001 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       537.550 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder":
[info]   5258811.705 ±(99.9%) 277813.254 ops/s [Average]
[info]   (min, avg, max) = (5184339.621, 5258811.705, 5356142.207), stdev = 72147.220
[info]   CI (99.9%): [4980998.451, 5536624.959] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate":
[info]   1710.427 ±(99.9%) 91.521 MB/sec [Average]
[info]   (min, avg, max) = (1685.980, 1710.427, 1742.720), stdev = 23.768
[info]   CI (99.9%): [1618.906, 1801.948] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.008 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1734.360 ±(99.9%) 515.409 MB/sec [Average]
[info]   (min, avg, max) = (1494.923, 1734.360, 1794.923), stdev = 133.850
[info]   CI (99.9%): [1218.951, 2249.769] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   518.986 ±(99.9%) 141.802 B/op [Average]
[info]   (min, avg, max) = (453.980, 518.986, 543.451), stdev = 36.825
[info]   CI (99.9%): [377.185, 660.788] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator
[info] # Run progress: 50.00% complete, ETA 00:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4743747.674 ops/s
[info] # Warmup Iteration   2: 5913884.051 ops/s
[info] # Warmup Iteration   3: 6330658.602 ops/s
[info] # Warmup Iteration   4: 6351666.581 ops/s
[info] # Warmup Iteration   5: 6041969.174 ops/s
[info] Iteration   1: 5996997.809 ops/s
[info]                  ·gc.alloc.rate:            1249.761 MB/sec
[info]                  ·gc.alloc.rate.norm:       328.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1196.276 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 313.963 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  6.000 ms
[info] Iteration   2: 5978362.896 ops/s
[info]                  ·gc.alloc.rate:                                  1245.650 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1196.064 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       314.943 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   3: 6130347.548 ops/s
[info]                  ·gc.alloc.rate:                                  1277.168 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1195.906 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       307.130 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   4: 6153517.115 ops/s
[info]                  ·gc.alloc.rate:            1282.121 MB/sec
[info]                  ·gc.alloc.rate.norm:       328.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1495.113 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 382.489 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   5: 6074905.475 ops/s
[info]                  ·gc.alloc.rate:            1265.604 MB/sec
[info]                  ·gc.alloc.rate.norm:       328.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1195.917 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 309.940 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator":
[info]   6066826.168 ±(99.9%) 300234.879 ops/s [Average]
[info]   (min, avg, max) = (5978362.896, 6066826.168, 6153517.115), stdev = 77970.045
[info]   CI (99.9%): [5766591.289, 6367061.047] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.alloc.rate":
[info]   1264.061 ±(99.9%) 62.203 MB/sec [Average]
[info]   (min, avg, max) = (1245.650, 1264.061, 1282.121), stdev = 16.154
[info]   CI (99.9%): [1201.858, 1326.264] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen":
[info]   1255.855 ±(99.9%) 515.019 MB/sec [Average]
[info]   (min, avg, max) = (1195.906, 1255.855, 1495.113), stdev = 133.749
[info]   CI (99.9%): [740.836, 1770.875] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   325.693 ±(99.9%) 122.854 B/op [Average]
[info]   (min, avg, max) = (307.130, 325.693, 382.489), stdev = 31.905
[info]   CI (99.9%): [202.839, 448.547] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 6.000), stdev = 1.342
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator
[info] # Run progress: 60.00% complete, ETA 00:01:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1852945.659 ops/s
[info] # Warmup Iteration   2: 3106063.035 ops/s
[info] # Warmup Iteration   3: 3186630.600 ops/s
[info] # Warmup Iteration   4: 3157267.160 ops/s
[info] # Warmup Iteration   5: 3203964.013 ops/s
[info] Iteration   1: 3189058.800 ops/s
[info]                  ·gc.alloc.rate:                                  2009.796 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.279 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1033.205 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   2: 3224211.640 ops/s
[info]                  ·gc.alloc.rate:                                  2032.144 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.489 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       875.988 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   3: 3217742.792 ops/s
[info]                  ·gc.alloc.rate:                                  2028.214 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.005 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.680 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1024.020 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 3159137.630 ops/s
[info]                  ·gc.alloc.rate:                                  1991.051 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.405 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1042.996 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 3165087.416 ops/s
[info]                  ·gc.alloc.rate:                                  1994.238 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2092.834 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1041.045 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator":
[info]   3191047.656 ±(99.9%) 114043.752 ops/s [Average]
[info]   (min, avg, max) = (3159137.630, 3191047.656, 3224211.640), stdev = 29616.800
[info]   CI (99.9%): [3077003.904, 3305091.408] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.alloc.rate":
[info]   2011.089 ±(99.9%) 72.647 MB/sec [Average]
[info]   (min, avg, max) = (1991.051, 2011.089, 2032.144), stdev = 18.866
[info]   CI (99.9%): [1938.442, 2083.736] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm":
[info]   992.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (992.000, 992.000, 992.000), stdev = 0.001
[info]   CI (99.9%): [992.000, 992.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.003 ±(99.9%) 0.007 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.003, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen":
[info]   2033.537 ±(99.9%) 514.570 MB/sec [Average]
[info]   (min, avg, max) = (1794.489, 2033.537, 2093.680), stdev = 133.632
[info]   CI (99.9%): [1518.967, 2548.108] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   1003.451 ±(99.9%) 275.882 B/op [Average]
[info]   (min, avg, max) = (875.988, 1003.451, 1042.996), stdev = 71.646
[info]   CI (99.9%): [727.569, 1279.333] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator
[info] # Run progress: 70.00% complete, ETA 00:00:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1702639.083 ops/s
[info] # Warmup Iteration   2: 2960469.852 ops/s
[info] # Warmup Iteration   3: 3038521.924 ops/s
[info] # Warmup Iteration   4: 3090719.091 ops/s
[info] # Warmup Iteration   5: 3009787.016 ops/s
[info] Iteration   1: 2996576.857 ops/s
[info]                  ·gc.alloc.rate:                                  1887.910 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2092.790 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1099.654 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 3006086.499 ops/s
[info]                  ·gc.alloc.rate:                                  1894.415 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.285 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       939.568 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 3043235.478 ops/s
[info]                  ·gc.alloc.rate:                                  1918.234 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.729 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1082.756 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   4: 3049838.767 ops/s
[info]                  ·gc.alloc.rate:            1921.865 MB/sec
[info]                  ·gc.alloc.rate.norm:       992.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1794.072 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 926.038 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   5: 3021308.467 ops/s
[info]                  ·gc.alloc.rate:                                  1904.524 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.701 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       934.798 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator":
[info]   3023409.214 ±(99.9%) 88566.212 ops/s [Average]
[info]   (min, avg, max) = (2996576.857, 3023409.214, 3049838.767), stdev = 23000.364
[info]   CI (99.9%): [2934843.002, 3111975.425] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.alloc.rate":
[info]   1905.389 ±(99.9%) 56.564 MB/sec [Average]
[info]   (min, avg, max) = (1887.910, 1905.389, 1921.865), stdev = 14.690
[info]   CI (99.9%): [1848.825, 1961.954] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm":
[info]   992.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (992.000, 992.000, 992.000), stdev = 0.001
[info]   CI (99.9%): [992.000, 992.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.003 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen":
[info]   1913.916 ±(99.9%) 630.421 MB/sec [Average]
[info]   (min, avg, max) = (1794.072, 1913.916, 2093.729), stdev = 163.718
[info]   CI (99.9%): [1283.494, 2544.337] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   996.563 ±(99.9%) 333.999 B/op [Average]
[info]   (min, avg, max) = (926.038, 996.563, 1099.654), stdev = 86.739
[info]   CI (99.9%): [662.563, 1330.562] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder
[info] # Run progress: 80.00% complete, ETA 00:00:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3248999.917 ops/s
[info] # Warmup Iteration   2: 4742296.962 ops/s
[info] # Warmup Iteration   3: 5065751.616 ops/s
[info] # Warmup Iteration   4: 5192527.494 ops/s
[info] # Warmup Iteration   5: 5097848.894 ops/s
[info] Iteration   1: 5011289.134 ops/s
[info]                  ·gc.alloc.rate:            1630.262 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1495.361 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 469.633 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   2: 5220347.624 ops/s
[info]                  ·gc.alloc.rate:                                  1697.828 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.017 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       541.007 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 5107554.174 ops/s
[info]                  ·gc.alloc.rate:                                  1661.388 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.219 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       552.935 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 5088256.535 ops/s
[info]                  ·gc.alloc.rate:            1654.998 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1495.094 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 462.531 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   5: 5013477.019 ops/s
[info]                  ·gc.alloc.rate:                                  1630.484 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.044 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       563.361 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder":
[info]   5088184.897 ±(99.9%) 329766.602 ops/s [Average]
[info]   (min, avg, max) = (5011289.134, 5088184.897, 5220347.624), stdev = 85639.339
[info]   CI (99.9%): [4758418.295, 5417951.499] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate":
[info]   1654.992 ±(99.9%) 106.989 MB/sec [Average]
[info]   (min, avg, max) = (1630.262, 1654.992, 1697.828), stdev = 27.785
[info]   CI (99.9%): [1548.003, 1761.981] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1674.547 ±(99.9%) 630.334 MB/sec [Average]
[info]   (min, avg, max) = (1495.094, 1674.547, 1794.219), stdev = 163.696
[info]   CI (99.9%): [1044.213, 2304.881] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   517.893 ±(99.9%) 184.906 B/op [Average]
[info]   (min, avg, max) = (462.531, 517.893, 563.361), stdev = 48.020
[info]   CI (99.9%): [332.987, 702.800] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation
[info] # Run progress: 90.00% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3884956.170 ops/s
[info] # Warmup Iteration   2: 5062120.680 ops/s
[info] # Warmup Iteration   3: 5248100.916 ops/s
[info] # Warmup Iteration   4: 5308170.848 ops/s
[info] # Warmup Iteration   5: 5371699.431 ops/s
[info] Iteration   1: 5214494.128 ops/s
[info]                  ·gc.alloc.rate:                                  1695.824 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1793.924 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       541.618 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 5254831.226 ops/s
[info]                  ·gc.alloc.rate:                                  1709.451 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.613 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       537.507 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 5270903.504 ops/s
[info]                  ·gc.alloc.rate:                                  1714.186 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1793.927 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       535.817 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 5313527.270 ops/s
[info]                  ·gc.alloc.rate:                                  1728.103 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1494.971 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       442.928 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 5290113.618 ops/s
[info]                  ·gc.alloc.rate:            1720.605 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1794.024 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 533.847 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation":
[info]   5268773.949 ±(99.9%) 144122.595 ops/s [Average]
[info]   (min, avg, max) = (5214494.128, 5268773.949, 5313527.270), stdev = 37428.180
[info]   CI (99.9%): [5124651.354, 5412896.544] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate":
[info]   1713.634 ±(99.9%) 46.883 MB/sec [Average]
[info]   (min, avg, max) = (1695.824, 1713.634, 1728.103), stdev = 12.175
[info]   CI (99.9%): [1666.751, 1760.516] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen":
[info]   1734.292 ±(99.9%) 515.158 MB/sec [Average]
[info]   (min, avg, max) = (1494.971, 1734.292, 1794.613), stdev = 133.785
[info]   CI (99.9%): [1219.134, 2249.450] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm":
[info]   518.344 ±(99.9%) 162.711 B/op [Average]
[info]   (min, avg, max) = (442.928, 518.344, 541.618), stdev = 42.256
[info]   CI (99.9%): [355.632, 681.055] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:02:33
[info] Benchmark                                                                                               Mode  Cnt        Score        Error   Units
[info] StringConcatenationBenchmark.fInterpolator                                                             thrpt    5   525091.298 ±  37714.262   ops/s
[info] StringConcatenationBenchmark.fInterpolator:·gc.alloc.rate                                              thrpt    5      805.845 ±     57.536  MB/sec
[info] StringConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm                                         thrpt    5     2416.001 ±      0.001    B/op
[info] StringConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.002 ±      0.016  MB/sec
[info] StringConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.006 ±      0.048    B/op
[info] StringConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5      777.429 ±    630.715  MB/sec
[info] StringConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5     2335.532 ±   1983.313    B/op
[info] StringConcatenationBenchmark.fInterpolator:·gc.count                                                   thrpt    5       13.000               counts
[info] StringConcatenationBenchmark.fInterpolator:·gc.time                                                    thrpt    5       11.000                   ms
[info] StringConcatenationBenchmark.fastInterpolator                                                          thrpt    5  3669907.152 ± 121485.958   ops/s
[info] StringConcatenationBenchmark.fastInterpolator:·gc.alloc.rate                                           thrpt    5     2144.901 ±     70.934  MB/sec
[info] StringConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm                                      thrpt    5      920.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.001 ±      0.003  MB/sec
[info] StringConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5       ≈ 10⁻³                 B/op
[info] StringConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5     2153.105 ±    516.632  MB/sec
[info] StringConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5      923.707 ±    234.511    B/op
[info] StringConcatenationBenchmark.fastInterpolator:·gc.count                                                thrpt    5       36.000               counts
[info] StringConcatenationBenchmark.fastInterpolator:·gc.time                                                 thrpt    5       31.000                   ms
[info] StringConcatenationBenchmark.frawInterpolator                                                          thrpt    5  6416147.791 ± 125167.101   ops/s
[info] StringConcatenationBenchmark.frawInterpolator:·gc.alloc.rate                                           thrpt    5      619.477 ±     12.118  MB/sec
[info] StringConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm                                      thrpt    5      152.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.023 ±      0.078  MB/sec
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.006 ±      0.019    B/op
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5      596.804 ±      7.004  MB/sec
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5      146.441 ±      3.756    B/op
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space                              thrpt    5        0.400 ±      3.441  MB/sec
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space.norm                         thrpt    5        0.098 ±      0.840    B/op
[info] StringConcatenationBenchmark.frawInterpolator:·gc.count                                                thrpt    5       10.000               counts
[info] StringConcatenationBenchmark.frawInterpolator:·gc.time                                                 thrpt    5       15.000                   ms
[info] StringConcatenationBenchmark.fsInterpolator                                                            thrpt    5  6404293.654 ± 113809.141   ops/s
[info] StringConcatenationBenchmark.fsInterpolator:·gc.alloc.rate                                             thrpt    5      618.366 ±     11.146  MB/sec
[info] StringConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm                                        thrpt    5      152.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                 thrpt    5        0.040 ±      0.248  MB/sec
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm            thrpt    5        0.010 ±      0.061    B/op
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen                                       thrpt    5      596.840 ±      7.169  MB/sec
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm                                  thrpt    5      146.710 ±      2.168    B/op
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space                                thrpt    5        0.400 ±      3.441  MB/sec
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space.norm                           thrpt    5        0.099 ±      0.851    B/op
[info] StringConcatenationBenchmark.fsInterpolator:·gc.count                                                  thrpt    5       10.000               counts
[info] StringConcatenationBenchmark.fsInterpolator:·gc.time                                                   thrpt    5       14.000                   ms
[info] StringConcatenationBenchmark.javaStringBuilder                                                         thrpt    5  5258811.705 ± 277813.254   ops/s
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate                                          thrpt    5     1710.427 ±     91.521  MB/sec
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm                                     thrpt    5      512.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'              thrpt    5        0.002 ±      0.008  MB/sec
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm         thrpt    5        0.001 ±      0.002    B/op
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen                                    thrpt    5     1734.360 ±    515.409  MB/sec
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm                               thrpt    5      518.986 ±    141.802    B/op
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.count                                               thrpt    5       29.000               counts
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.time                                                thrpt    5       21.000                   ms
[info] StringConcatenationBenchmark.pInterpolator                                                             thrpt    5  6066826.168 ± 300234.879   ops/s
[info] StringConcatenationBenchmark.pInterpolator:·gc.alloc.rate                                              thrpt    5     1264.061 ±     62.203  MB/sec
[info] StringConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm                                         thrpt    5      328.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.004  MB/sec
[info] StringConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5       ≈ 10⁻⁴                 B/op
[info] StringConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1255.855 ±    515.019  MB/sec
[info] StringConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5      325.693 ±    122.854    B/op
[info] StringConcatenationBenchmark.pInterpolator:·gc.count                                                   thrpt    5       21.000               counts
[info] StringConcatenationBenchmark.pInterpolator:·gc.time                                                    thrpt    5       18.000                   ms
[info] StringConcatenationBenchmark.rawInterpolator                                                           thrpt    5  3191047.656 ± 114043.752   ops/s
[info] StringConcatenationBenchmark.rawInterpolator:·gc.alloc.rate                                            thrpt    5     2011.089 ±     72.647  MB/sec
[info] StringConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm                                       thrpt    5      992.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                thrpt    5        0.003 ±      0.007  MB/sec
[info] StringConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm           thrpt    5        0.001 ±      0.003    B/op
[info] StringConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen                                      thrpt    5     2033.537 ±    514.570  MB/sec
[info] StringConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm                                 thrpt    5     1003.451 ±    275.882    B/op
[info] StringConcatenationBenchmark.rawInterpolator:·gc.count                                                 thrpt    5       34.000               counts
[info] StringConcatenationBenchmark.rawInterpolator:·gc.time                                                  thrpt    5       28.000                   ms
[info] StringConcatenationBenchmark.sInterpolator                                                             thrpt    5  3023409.214 ±  88566.212   ops/s
[info] StringConcatenationBenchmark.sInterpolator:·gc.alloc.rate                                              thrpt    5     1905.389 ±     56.564  MB/sec
[info] StringConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm                                         thrpt    5      992.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.003  MB/sec
[info] StringConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.001 ±      0.002    B/op
[info] StringConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1913.916 ±    630.421  MB/sec
[info] StringConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5      996.563 ±    333.999    B/op
[info] StringConcatenationBenchmark.sInterpolator:·gc.count                                                   thrpt    5       32.000               counts
[info] StringConcatenationBenchmark.sInterpolator:·gc.time                                                    thrpt    5       26.000                   ms
[info] StringConcatenationBenchmark.scalaStringBuilder                                                        thrpt    5  5088184.897 ± 329766.602   ops/s
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate                                         thrpt    5     1654.992 ±    106.989  MB/sec
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm                                    thrpt    5      512.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'             thrpt    5        0.002 ±      0.006  MB/sec
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm        thrpt    5        0.001 ±      0.002    B/op
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen                                   thrpt    5     1674.547 ±    630.334  MB/sec
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm                              thrpt    5      517.893 ±    184.906    B/op
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.count                                              thrpt    5       28.000               counts
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.time                                               thrpt    5       22.000                   ms
[info] StringConcatenationBenchmark.scalaStringConcatenation                                                  thrpt    5  5268773.949 ± 144122.595   ops/s
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate                                   thrpt    5     1713.634 ±     46.883  MB/sec
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm                              thrpt    5      512.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'       thrpt    5        0.002 ±      0.004  MB/sec
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm  thrpt    5       ≈ 10⁻³                 B/op
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen                             thrpt    5     1734.292 ±    515.158  MB/sec
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm                        thrpt    5      518.344 ±    162.711    B/op
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.count                                        thrpt    5       29.000               counts
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.time                                         thrpt    5       23.000                   ms
[info] Benchmark result is saved to jdk-9_scala-2.12.4.json
[success] Total time: 161 s, completed Mar 16, 2018, 11:39:54 AM
