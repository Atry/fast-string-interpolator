[info] Loading settings from idea.sbt,build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[info] Setting Scala version to 2.12.4 on 3 projects.
[info] Reapplying settings...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[success] Total time: 0 s, completed Mar 13, 2018, 6:31:28 PM
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/classes ...
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.12/macros_2.12-0.1.0-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/benchmark_2.12-0.1.0-SNAPSHOT.jar ...
[info] Done packaging.
Processing 1 classes from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 13 Java sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/benchmark_2.12-0.1.0-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/benchmark_2.12-0.1.0-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc -rf json -rff jdk-9_scala-2.12.4.json gc .*
[error] WARNING: An illegal reflective access operation has occurred
[error] WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/tmp/sbt_dec9523c/target/5f9f9839/jmh-core-1.20.jar) to field java.io.PrintStream.charOut
[error] WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
[error] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[error] WARNING: All illegal access operations will be denied in a future release
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator
[info] # Run progress: 0.00% complete, ETA 00:01:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 223710.709 ops/s
[info] # Warmup Iteration   2: 460606.678 ops/s
[info] # Warmup Iteration   3: 527702.482 ops/s
[info] # Warmup Iteration   4: 534088.294 ops/s
[info] # Warmup Iteration   5: 525479.054 ops/s
[info] Iteration   1: 533493.051 ops/s
[info]                  ·gc.alloc.rate:                                  813.537 MB/sec
[info]                  ·gc.alloc.rate.norm:                             2400.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.015 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.045 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            598.195 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1764.724 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        1.000 ms
[info] Iteration   2: 514476.788 ops/s
[info]                  ·gc.alloc.rate:            784.364 MB/sec
[info]                  ·gc.alloc.rate.norm:       2400.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      897.064 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2744.841 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   3: 529611.701 ops/s
[info]                  ·gc.alloc.rate:                                  807.596 MB/sec
[info]                  ·gc.alloc.rate.norm:                             2400.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            897.261 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       2666.465 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   4: 527657.600 ops/s
[info]                  ·gc.alloc.rate:            804.679 MB/sec
[info]                  ·gc.alloc.rate.norm:       2400.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      598.199 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1784.164 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  1.000 ms
[info] Iteration   5: 529599.179 ops/s
[info]                  ·gc.alloc.rate:            807.620 MB/sec
[info]                  ·gc.alloc.rate.norm:       2400.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      897.296 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2666.490 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator":
[info]   526967.664 ±(99.9%) 28098.784 ops/s [Average]
[info]   (min, avg, max) = (514476.788, 526967.664, 533493.051), stdev = 7297.165
[info]   CI (99.9%): [498868.880, 555066.448] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.alloc.rate":
[info]   803.559 ±(99.9%) 43.140 MB/sec [Average]
[info]   (min, avg, max) = (784.364, 803.559, 813.537), stdev = 11.203
[info]   CI (99.9%): [760.420, 846.699] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm":
[info]   2400.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2400.001, 2400.001, 2400.001), stdev = 0.001
[info]   CI (99.9%): [2400.001, 2400.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.003 ±(99.9%) 0.026 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.009 ±(99.9%) 0.076 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.045), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen":
[info]   777.603 ±(99.9%) 630.637 MB/sec [Average]
[info]   (min, avg, max) = (598.195, 777.603, 897.296), stdev = 163.774
[info]   CI (99.9%): [146.966, 1408.240] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   2325.337 ±(99.9%) 1940.561 B/op [Average]
[info]   (min, avg, max) = (1764.724, 2325.337, 2744.841), stdev = 503.957
[info]   CI (99.9%): [384.776, 4265.897] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fInterpolator:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator
[info] # Run progress: 11.11% complete, ETA 00:02:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4501858.539 ops/s
[info] # Warmup Iteration   2: 6035754.677 ops/s
[info] # Warmup Iteration   3: 6399774.793 ops/s
[info] # Warmup Iteration   4: 6548131.351 ops/s
[info] # Warmup Iteration   5: 6568797.400 ops/s
[info] Iteration   1: 6499474.386 ops/s
[info]                  ·gc.alloc.rate:                                  627.692 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.036 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.009 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            594.199 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       143.889 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   2: 6509769.915 ops/s
[info]                  ·gc.alloc.rate:                   628.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             596.144 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        144.143 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.483 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 6571506.269 ops/s
[info]                  ·gc.alloc.rate:                                  634.560 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.052 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.012 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            598.114 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       143.270 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        2.000 ms
[info] Iteration   4: 6574725.603 ops/s
[info]                  ·gc.alloc.rate:                                  634.906 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            897.226 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       214.801 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        2.000 ms
[info] Iteration   5: 6582278.546 ops/s
[info]                  ·gc.alloc.rate:            635.620 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      598.116 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 143.031 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator":
[info]   6547550.944 ±(99.9%) 152296.345 ops/s [Average]
[info]   (min, avg, max) = (6499474.386, 6547550.944, 6582278.546), stdev = 39550.877
[info]   CI (99.9%): [6395254.598, 6699847.289] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.alloc.rate":
[info]   632.283 ±(99.9%) 14.609 MB/sec [Average]
[info]   (min, avg, max) = (627.692, 632.283, 635.620), stdev = 3.794
[info]   CI (99.9%): [617.674, 646.892] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.018 ±(99.9%) 0.094 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.052), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.004 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.012), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen":
[info]   656.760 ±(99.9%) 517.661 MB/sec [Average]
[info]   (min, avg, max) = (594.199, 656.760, 897.226), stdev = 134.435
[info]   CI (99.9%): [139.099, 1174.420] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   157.827 ±(99.9%) 122.653 B/op [Average]
[info]   (min, avg, max) = (143.031, 157.827, 214.801), stdev = 31.853
[info]   CI (99.9%): [35.174, 280.480] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.097 ±(99.9%) 0.832 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.097, 0.483), stdev = 0.216
[info]   CI (99.9%): [≈ 0, 0.929] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.frawInterpolator:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 6.000), stdev = 1.789
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator
[info] # Run progress: 22.22% complete, ETA 00:01:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4420019.351 ops/s
[info] # Warmup Iteration   2: 6180987.385 ops/s
[info] # Warmup Iteration   3: 6410928.893 ops/s
[info] # Warmup Iteration   4: 6251725.141 ops/s
[info] # Warmup Iteration   5: 6243011.350 ops/s
[info] Iteration   1: 6253439.254 ops/s
[info]                  ·gc.alloc.rate:                                  603.812 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.056 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.014 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            594.042 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       149.541 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 6245704.908 ops/s
[info]                  ·gc.alloc.rate:                                  603.153 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.019 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.005 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            596.138 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       150.232 B/op
[info]                  ·gc.churn.G1_Survivor_Space:                     1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm:                0.504 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 6612488.825 ops/s
[info]                  ·gc.alloc.rate:                                  638.735 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.032 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.008 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            598.318 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       142.382 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        2.000 ms
[info] Iteration   4: 6456849.371 ops/s
[info]                  ·gc.alloc.rate:            623.485 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      598.065 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 145.803 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   5: 6636354.982 ops/s
[info]                  ·gc.alloc.rate:            640.853 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      598.130 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 141.867 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator":
[info]   6440967.468 ±(99.9%) 723322.706 ops/s [Average]
[info]   (min, avg, max) = (6245704.908, 6440967.468, 6636354.982), stdev = 187844.610
[info]   CI (99.9%): [5717644.761, 7164290.174] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.alloc.rate":
[info]   622.008 ±(99.9%) 70.050 MB/sec [Average]
[info]   (min, avg, max) = (603.153, 622.008, 640.853), stdev = 18.192
[info]   CI (99.9%): [551.958, 692.057] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.021 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.056), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.005 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen":
[info]   596.939 ±(99.9%) 7.106 MB/sec [Average]
[info]   (min, avg, max) = (594.042, 596.939, 598.318), stdev = 1.845
[info]   CI (99.9%): [589.833, 604.045] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   145.965 ±(99.9%) 14.995 B/op [Average]
[info]   (min, avg, max) = (141.867, 145.965, 150.232), stdev = 3.894
[info]   CI (99.9%): [130.970, 160.959] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.101 ±(99.9%) 0.867 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.101, 0.504), stdev = 0.225
[info]   CI (99.9%): [≈ 0, 0.968] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.fsInterpolator:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.414
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder
[info] # Run progress: 33.33% complete, ETA 00:01:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3849620.404 ops/s
[info] # Warmup Iteration   2: 5010959.570 ops/s
[info] # Warmup Iteration   3: 5227322.217 ops/s
[info] # Warmup Iteration   4: 5372815.875 ops/s
[info] # Warmup Iteration   5: 5342873.420 ops/s
[info] Iteration   1: 5348845.885 ops/s
[info]                  ·gc.alloc.rate:            1739.773 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1495.241 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 440.036 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   2: 5361147.287 ops/s
[info]                  ·gc.alloc.rate:                                  1743.808 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.326 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       526.833 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 5347958.027 ops/s
[info]                  ·gc.alloc.rate:                                  1739.563 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.416 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       528.145 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 5159718.072 ops/s
[info]                  ·gc.alloc.rate:                                  1678.281 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.312 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       547.398 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 5197151.036 ops/s
[info]                  ·gc.alloc.rate:            1690.495 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1495.272 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 452.873 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder":
[info]   5282964.061 ±(99.9%) 371495.832 ops/s [Average]
[info]   (min, avg, max) = (5159718.072, 5282964.061, 5361147.287), stdev = 96476.288
[info]   CI (99.9%): [4911468.230, 5654459.893] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate":
[info]   1718.384 ±(99.9%) 120.828 MB/sec [Average]
[info]   (min, avg, max) = (1678.281, 1718.384, 1743.808), stdev = 31.379
[info]   CI (99.9%): [1597.556, 1839.212] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1674.713 ±(99.9%) 630.817 MB/sec [Average]
[info]   (min, avg, max) = (1495.241, 1674.713, 1794.416), stdev = 163.821
[info]   CI (99.9%): [1043.897, 2305.530] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   499.057 ±(99.9%) 188.356 B/op [Average]
[info]   (min, avg, max) = (440.036, 499.057, 547.398), stdev = 48.915
[info]   CI (99.9%): [310.701, 687.413] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.javaStringBuilder:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator
[info] # Run progress: 44.44% complete, ETA 00:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4702578.526 ops/s
[info] # Warmup Iteration   2: 6027176.185 ops/s
[info] # Warmup Iteration   3: 6153353.712 ops/s
[info] # Warmup Iteration   4: 6355968.694 ops/s
[info] # Warmup Iteration   5: 6324850.098 ops/s
[info] Iteration   1: 6078726.591 ops/s
[info]                  ·gc.alloc.rate:                                  1266.586 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1196.106 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       309.748 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   2: 6408785.445 ops/s
[info]                  ·gc.alloc.rate:                                  1336.021 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1495.994 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       367.274 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   3: 6386455.916 ops/s
[info]                  ·gc.alloc.rate:            1330.806 MB/sec
[info]                  ·gc.alloc.rate.norm:       328.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1196.291 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 294.846 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   4: 6363015.466 ops/s
[info]                  ·gc.alloc.rate:                                  1325.978 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1495.400 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       369.909 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 6358710.444 ops/s
[info]                  ·gc.alloc.rate:                                  1324.950 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1196.139 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       296.112 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator":
[info]   6319138.772 ±(99.9%) 523238.691 ops/s [Average]
[info]   (min, avg, max) = (6078726.591, 6319138.772, 6408785.445), stdev = 135883.426
[info]   CI (99.9%): [5795900.081, 6842377.463] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.alloc.rate":
[info]   1316.868 ±(99.9%) 109.553 MB/sec [Average]
[info]   (min, avg, max) = (1266.586, 1316.868, 1336.021), stdev = 28.450
[info]   CI (99.9%): [1207.315, 1426.421] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen":
[info]   1315.986 ±(99.9%) 631.710 MB/sec [Average]
[info]   (min, avg, max) = (1196.106, 1315.986, 1495.994), stdev = 164.053
[info]   CI (99.9%): [684.275, 1947.696] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   327.578 ±(99.9%) 145.958 B/op [Average]
[info]   (min, avg, max) = (294.846, 327.578, 369.909), stdev = 37.905
[info]   CI (99.9%): [181.620, 473.536] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.pInterpolator:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator
[info] # Run progress: 55.56% complete, ETA 00:01:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1885321.792 ops/s
[info] # Warmup Iteration   2: 3157413.815 ops/s
[info] # Warmup Iteration   3: 3224991.787 ops/s
[info] # Warmup Iteration   4: 3124799.093 ops/s
[info] # Warmup Iteration   5: 3098265.953 ops/s
[info] Iteration   1: 3210578.506 ops/s
[info]                  ·gc.alloc.rate:                                  2023.109 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.005 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.142 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1026.339 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   2: 3101847.761 ops/s
[info]                  ·gc.alloc.rate:                                  1954.785 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.217 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       910.516 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 3254693.590 ops/s
[info]                  ·gc.alloc.rate:                                  2052.134 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2094.440 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1012.451 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 3263995.119 ops/s
[info]                  ·gc.alloc.rate:                                  2057.046 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.459 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1009.560 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   5: 3270455.763 ops/s
[info]                  ·gc.alloc.rate:            2060.923 MB/sec
[info]                  ·gc.alloc.rate.norm:       992.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2093.151 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1007.513 B/op
[info]                  ·gc.count:                 7.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator":
[info]   3220314.148 ±(99.9%) 270459.581 ops/s [Average]
[info]   (min, avg, max) = (3101847.761, 3220314.148, 3270455.763), stdev = 70237.494
[info]   CI (99.9%): [2949854.567, 3490773.729] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.alloc.rate":
[info]   2029.599 ±(99.9%) 170.927 MB/sec [Average]
[info]   (min, avg, max) = (1954.785, 2029.599, 2060.923), stdev = 44.389
[info]   CI (99.9%): [1858.673, 2200.526] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm":
[info]   992.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (992.000, 992.000, 992.000), stdev = 0.001
[info]   CI (99.9%): [992.000, 992.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.008 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.004 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen":
[info]   2033.682 ±(99.9%) 515.470 MB/sec [Average]
[info]   (min, avg, max) = (1794.217, 2033.682, 2094.440), stdev = 133.866
[info]   CI (99.9%): [1518.212, 2549.152] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   993.276 ±(99.9%) 180.384 B/op [Average]
[info]   (min, avg, max) = (910.516, 993.276, 1026.339), stdev = 46.845
[info]   CI (99.9%): [812.892, 1173.660] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.rawInterpolator:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator
[info] # Run progress: 66.67% complete, ETA 00:00:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1752558.113 ops/s
[info] # Warmup Iteration   2: 2964157.618 ops/s
[info] # Warmup Iteration   3: 2996302.680 ops/s
[info] # Warmup Iteration   4: 3066558.177 ops/s
[info] # Warmup Iteration   5: 3024141.787 ops/s
[info] Iteration   1: 2971955.771 ops/s
[info]                  ·gc.alloc.rate:                                  1872.981 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.424 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1108.755 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 2949550.908 ops/s
[info]                  ·gc.alloc.rate:                                  1859.632 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1795.122 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       957.588 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 3017586.295 ops/s
[info]                  ·gc.alloc.rate:                                  1901.638 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.229 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       935.970 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 2938814.133 ops/s
[info]                  ·gc.alloc.rate:            1852.129 MB/sec
[info]                  ·gc.alloc.rate.norm:       992.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1794.463 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 961.114 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   5: 2914013.944 ops/s
[info]                  ·gc.alloc.rate:                                  1836.570 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.487 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1130.771 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator":
[info]   2958384.210 ±(99.9%) 150604.116 ops/s [Average]
[info]   (min, avg, max) = (2914013.944, 2958384.210, 3017586.295), stdev = 39111.411
[info]   CI (99.9%): [2807780.094, 3108988.326] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.alloc.rate":
[info]   1864.590 ±(99.9%) 94.477 MB/sec [Average]
[info]   (min, avg, max) = (1836.570, 1864.590, 1901.638), stdev = 24.536
[info]   CI (99.9%): [1770.112, 1959.067] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm":
[info]   992.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (992.000, 992.000, 992.000), stdev = 0.001
[info]   CI (99.9%): [992.000, 992.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen":
[info]   1914.145 ±(99.9%) 630.303 MB/sec [Average]
[info]   (min, avg, max) = (1794.229, 1914.145, 2093.487), stdev = 163.688
[info]   CI (99.9%): [1283.842, 2544.448] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   1018.840 ±(99.9%) 357.949 B/op [Average]
[info]   (min, avg, max) = (935.970, 1018.840, 1130.771), stdev = 92.958
[info]   CI (99.9%): [660.891, 1376.788] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.sInterpolator:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder
[info] # Run progress: 77.78% complete, ETA 00:00:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3151552.709 ops/s
[info] # Warmup Iteration   2: 4705605.693 ops/s
[info] # Warmup Iteration   3: 5076244.115 ops/s
[info] # Warmup Iteration   4: 4875333.520 ops/s
[info] # Warmup Iteration   5: 4881548.846 ops/s
[info] Iteration   1: 5053308.117 ops/s
[info]                  ·gc.alloc.rate:                                  1643.702 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.355 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       558.927 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 5192375.709 ops/s
[info]                  ·gc.alloc.rate:                                  1689.072 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1495.403 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       453.294 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 4860968.654 ops/s
[info]                  ·gc.alloc.rate:                                  1580.993 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.228 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       581.056 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        12.000 ms
[info] Iteration   4: 5049739.705 ops/s
[info]                  ·gc.alloc.rate:                                  1642.561 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1495.349 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       466.113 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 5142742.921 ops/s
[info]                  ·gc.alloc.rate:                                  1672.750 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.302 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       549.205 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder":
[info]   5059827.021 ±(99.9%) 487578.431 ops/s [Average]
[info]   (min, avg, max) = (4860968.654, 5059827.021, 5192375.709), stdev = 126622.570
[info]   CI (99.9%): [4572248.590, 5547405.453] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate":
[info]   1645.816 ±(99.9%) 158.924 MB/sec [Average]
[info]   (min, avg, max) = (1580.993, 1645.816, 1689.072), stdev = 41.272
[info]   CI (99.9%): [1486.891, 1804.740] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.005 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.002, 0.004), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1674.727 ±(99.9%) 630.446 MB/sec [Average]
[info]   (min, avg, max) = (1495.349, 1674.727, 1794.355), stdev = 163.725
[info]   CI (99.9%): [1044.281, 2305.173] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   521.719 ±(99.9%) 223.161 B/op [Average]
[info]   (min, avg, max) = (453.294, 521.719, 581.056), stdev = 57.954
[info]   CI (99.9%): [298.558, 744.880] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringBuilder:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 12.000), stdev = 3.493
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation
[info] # Run progress: 88.89% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3946903.857 ops/s
[info] # Warmup Iteration   2: 5000075.937 ops/s
[info] # Warmup Iteration   3: 5300226.494 ops/s
[info] # Warmup Iteration   4: 5345804.266 ops/s
[info] # Warmup Iteration   5: 5234896.827 ops/s
[info] Iteration   1: 5351217.082 ops/s
[info]                  ·gc.alloc.rate:                                  1740.498 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.280 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       527.821 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 5387313.091 ops/s
[info]                  ·gc.alloc.rate:                                  1752.380 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.428 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       524.285 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 5370150.631 ops/s
[info]                  ·gc.alloc.rate:                                  1747.343 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.830 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       525.915 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 5373413.285 ops/s
[info]                  ·gc.alloc.rate:                                  1747.809 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.005 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.374 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       525.641 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 5203940.215 ops/s
[info]                  ·gc.alloc.rate:            1692.643 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1794.253 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 542.736 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  12.000 ms
[info] Result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation":
[info]   5337206.861 ±(99.9%) 291119.356 ops/s [Average]
[info]   (min, avg, max) = (5203940.215, 5337206.861, 5387313.091), stdev = 75602.772
[info]   CI (99.9%): [5046087.505, 5628326.217] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate":
[info]   1736.134 ±(99.9%) 95.034 MB/sec [Average]
[info]   (min, avg, max) = (1692.643, 1736.134, 1752.380), stdev = 24.680
[info]   CI (99.9%): [1641.100, 1831.168] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.008 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen":
[info]   1794.433 ±(99.9%) 0.896 MB/sec [Average]
[info]   (min, avg, max) = (1794.253, 1794.433, 1794.830), stdev = 0.233
[info]   CI (99.9%): [1793.537, 1795.329] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm":
[info]   529.280 ±(99.9%) 29.370 B/op [Average]
[info]   (min, avg, max) = (524.285, 529.280, 542.736), stdev = 7.627
[info]   CI (99.9%): [499.910, 558.649] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.StringConcatenationBenchmark.scalaStringConcatenation:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 12.000), stdev = 3.391
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:02:18
[info] Benchmark                                                                                               Mode  Cnt        Score        Error   Units
[info] StringConcatenationBenchmark.fInterpolator                                                             thrpt    5   526967.664 ±  28098.784   ops/s
[info] StringConcatenationBenchmark.fInterpolator:·gc.alloc.rate                                              thrpt    5      803.559 ±     43.140  MB/sec
[info] StringConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm                                         thrpt    5     2400.001 ±      0.001    B/op
[info] StringConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.003 ±      0.026  MB/sec
[info] StringConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.009 ±      0.076    B/op
[info] StringConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5      777.603 ±    630.637  MB/sec
[info] StringConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5     2325.337 ±   1940.561    B/op
[info] StringConcatenationBenchmark.fInterpolator:·gc.count                                                   thrpt    5       13.000               counts
[info] StringConcatenationBenchmark.fInterpolator:·gc.time                                                    thrpt    5       10.000                   ms
[info] StringConcatenationBenchmark.frawInterpolator                                                          thrpt    5  6547550.944 ± 152296.345   ops/s
[info] StringConcatenationBenchmark.frawInterpolator:·gc.alloc.rate                                           thrpt    5      632.283 ±     14.609  MB/sec
[info] StringConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm                                      thrpt    5      152.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.018 ±      0.094  MB/sec
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.004 ±      0.023    B/op
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5      656.760 ±    517.661  MB/sec
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5      157.827 ±    122.653    B/op
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space                              thrpt    5        0.400 ±      3.441  MB/sec
[info] StringConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space.norm                         thrpt    5        0.097 ±      0.832    B/op
[info] StringConcatenationBenchmark.frawInterpolator:·gc.count                                                thrpt    5       11.000               counts
[info] StringConcatenationBenchmark.frawInterpolator:·gc.time                                                 thrpt    5       16.000                   ms
[info] StringConcatenationBenchmark.fsInterpolator                                                            thrpt    5  6440967.468 ± 723322.706   ops/s
[info] StringConcatenationBenchmark.fsInterpolator:·gc.alloc.rate                                             thrpt    5      622.008 ±     70.050  MB/sec
[info] StringConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm                                        thrpt    5      152.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                 thrpt    5        0.021 ±      0.091  MB/sec
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm            thrpt    5        0.005 ±      0.023    B/op
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen                                       thrpt    5      596.939 ±      7.106  MB/sec
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm                                  thrpt    5      145.965 ±     14.995    B/op
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space                                thrpt    5        0.400 ±      3.441  MB/sec
[info] StringConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space.norm                           thrpt    5        0.101 ±      0.867    B/op
[info] StringConcatenationBenchmark.fsInterpolator:·gc.count                                                  thrpt    5       10.000               counts
[info] StringConcatenationBenchmark.fsInterpolator:·gc.time                                                   thrpt    5       15.000                   ms
[info] StringConcatenationBenchmark.javaStringBuilder                                                         thrpt    5  5282964.061 ± 371495.832   ops/s
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate                                          thrpt    5     1718.384 ±    120.828  MB/sec
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm                                     thrpt    5      512.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'              thrpt    5        0.001 ±      0.004  MB/sec
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm         thrpt    5       ≈ 10⁻⁴                 B/op
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen                                    thrpt    5     1674.713 ±    630.817  MB/sec
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm                               thrpt    5      499.057 ±    188.356    B/op
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.count                                               thrpt    5       28.000               counts
[info] StringConcatenationBenchmark.javaStringBuilder:·gc.time                                                thrpt    5       22.000                   ms
[info] StringConcatenationBenchmark.pInterpolator                                                             thrpt    5  6319138.772 ± 523238.691   ops/s
[info] StringConcatenationBenchmark.pInterpolator:·gc.alloc.rate                                              thrpt    5     1316.868 ±    109.553  MB/sec
[info] StringConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm                                         thrpt    5      328.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.002 ±      0.006  MB/sec
[info] StringConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5       ≈ 10⁻³                 B/op
[info] StringConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1315.986 ±    631.710  MB/sec
[info] StringConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5      327.578 ±    145.958    B/op
[info] StringConcatenationBenchmark.pInterpolator:·gc.count                                                   thrpt    5       22.000               counts
[info] StringConcatenationBenchmark.pInterpolator:·gc.time                                                    thrpt    5       16.000                   ms
[info] StringConcatenationBenchmark.rawInterpolator                                                           thrpt    5  3220314.148 ± 270459.581   ops/s
[info] StringConcatenationBenchmark.rawInterpolator:·gc.alloc.rate                                            thrpt    5     2029.599 ±    170.927  MB/sec
[info] StringConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm                                       thrpt    5      992.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                thrpt    5        0.002 ±      0.008  MB/sec
[info] StringConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm           thrpt    5        0.001 ±      0.004    B/op
[info] StringConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen                                      thrpt    5     2033.682 ±    515.470  MB/sec
[info] StringConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm                                 thrpt    5      993.276 ±    180.384    B/op
[info] StringConcatenationBenchmark.rawInterpolator:·gc.count                                                 thrpt    5       34.000               counts
[info] StringConcatenationBenchmark.rawInterpolator:·gc.time                                                  thrpt    5       26.000                   ms
[info] StringConcatenationBenchmark.sInterpolator                                                             thrpt    5  2958384.210 ± 150604.116   ops/s
[info] StringConcatenationBenchmark.sInterpolator:·gc.alloc.rate                                              thrpt    5     1864.590 ±     94.477  MB/sec
[info] StringConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm                                         thrpt    5      992.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.004  MB/sec
[info] StringConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.001 ±      0.002    B/op
[info] StringConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1914.145 ±    630.303  MB/sec
[info] StringConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5     1018.840 ±    357.949    B/op
[info] StringConcatenationBenchmark.sInterpolator:·gc.count                                                   thrpt    5       32.000               counts
[info] StringConcatenationBenchmark.sInterpolator:·gc.time                                                    thrpt    5       25.000                   ms
[info] StringConcatenationBenchmark.scalaStringBuilder                                                        thrpt    5  5059827.021 ± 487578.431   ops/s
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate                                         thrpt    5     1645.816 ±    158.924  MB/sec
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm                                    thrpt    5      512.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'             thrpt    5        0.002 ±      0.005  MB/sec
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm        thrpt    5        0.001 ±      0.002    B/op
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen                                   thrpt    5     1674.727 ±    630.446  MB/sec
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm                              thrpt    5      521.719 ±    223.161    B/op
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.count                                              thrpt    5       28.000               counts
[info] StringConcatenationBenchmark.scalaStringBuilder:·gc.time                                               thrpt    5       29.000                   ms
[info] StringConcatenationBenchmark.scalaStringConcatenation                                                  thrpt    5  5337206.861 ± 291119.356   ops/s
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate                                   thrpt    5     1736.134 ±     95.034  MB/sec
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm                              thrpt    5      512.000 ±      0.001    B/op
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'       thrpt    5        0.002 ±      0.008  MB/sec
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm  thrpt    5        0.001 ±      0.002    B/op
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen                             thrpt    5     1794.433 ±      0.896  MB/sec
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm                        thrpt    5      529.280 ±     29.370    B/op
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.count                                        thrpt    5       30.000               counts
[info] StringConcatenationBenchmark.scalaStringConcatenation:·gc.time                                         thrpt    5       30.000                   ms
[info] Benchmark result is saved to jdk-9_scala-2.12.4.json
[success] Total time: 146 s, completed Mar 13, 2018, 6:33:54 PM
