[info] Loading settings from idea.sbt,build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[info] Setting Scala version to 2.13.0-M3 on 2 projects.
[info] Excluded 2 projects, run ++ 2.13.0-M3 -v for more details.
[info] Reapplying settings...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[success] Total time: 0 s, completed Mar 23, 2018 1:09:21 PM
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark-core...
[info] Done updating.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.13.0-M3/classes ...
[info] Done compiling.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.13.0-M3/classes ...
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.13.0-M3/macros_2.13.0-M3-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.13.0-M3/benchmark-core_2.13.0-M3-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 1 classes from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.13.0-M3/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.13.0-M3/src_managed/jmh and resources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.13.0-M3/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.13.0-M3/test-classes ...
[info] Compiling 12 Java sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.13.0-M3/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.13.0-M3/benchmark-core_2.13.0-M3-0.1.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.13.0-M3/benchmark-core_2.13.0-M3-0.1.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -jvm /usr/lib/jvm/java-9-oracle/bin/java -prof gc -rf json -rff jdk-9_scala-2.13.0-M3.json .*
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fInterpolator
[info] # Run progress: 0.00% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 247539.654 ops/s
[info] # Warmup Iteration   2: 451196.888 ops/s
[info] # Warmup Iteration   3: 511795.989 ops/s
[info] # Warmup Iteration   4: 525619.249 ops/s
[info] # Warmup Iteration   5: 518514.563 ops/s
[info] Iteration   1: 523615.231 ops/s
[info]                  ·gc.alloc.rate:                                  806.543 MB/sec
[info]                  ·gc.alloc.rate.norm:                             2424.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.028 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.084 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            897.400 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       2697.066 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   2: 521048.207 ops/s
[info]                  ·gc.alloc.rate:            802.427 MB/sec
[info]                  ·gc.alloc.rate.norm:       2424.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      598.139 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1806.880 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  1.000 ms
[info] Iteration   3: 523542.253 ops/s
[info]                  ·gc.alloc.rate:            806.506 MB/sec
[info]                  ·gc.alloc.rate.norm:       2424.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      897.474 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2697.411 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   4: 525319.897 ops/s
[info]                  ·gc.alloc.rate:            808.954 MB/sec
[info]                  ·gc.alloc.rate.norm:       2424.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      897.118 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2688.181 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   5: 522812.503 ops/s
[info]                  ·gc.alloc.rate:            805.316 MB/sec
[info]                  ·gc.alloc.rate.norm:       2424.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      897.442 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2701.301 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fInterpolator":
[info]   523267.618 ±(99.9%) 5947.040 ops/s [Average]
[info]   (min, avg, max) = (521048.207, 523267.618, 525319.897), stdev = 1544.427
[info]   CI (99.9%): [517320.578, 529214.658] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fInterpolator:·gc.alloc.rate":
[info]   805.949 ±(99.9%) 9.132 MB/sec [Average]
[info]   (min, avg, max) = (802.427, 805.949, 808.954), stdev = 2.372
[info]   CI (99.9%): [796.817, 815.081] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fInterpolator:·gc.alloc.rate.norm":
[info]   2424.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2424.001, 2424.001, 2424.001), stdev = 0.001
[info]   CI (99.9%): [2424.001, 2424.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.006 ±(99.9%) 0.048 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.028), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.017 ±(99.9%) 0.145 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.084), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fInterpolator:·gc.churn.G1_Old_Gen":
[info]   837.515 ±(99.9%) 515.275 MB/sec [Average]
[info]   (min, avg, max) = (598.139, 837.515, 897.474), stdev = 133.815
[info]   CI (99.9%): [322.240, 1352.789] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   2518.168 ±(99.9%) 1531.212 B/op [Average]
[info]   (min, avg, max) = (1806.880, 2518.168, 2701.301), stdev = 397.651
[info]   CI (99.9%): [986.956, 4049.380] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fInterpolator:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fInterpolator:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 5.000), stdev = 1.517
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator
[info] # Run progress: 12.50% complete, ETA 00:01:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4440201.750 ops/s
[info] # Warmup Iteration   2: 5991463.386 ops/s
[info] # Warmup Iteration   3: 6526832.641 ops/s
[info] # Warmup Iteration   4: 6545180.335 ops/s
[info] # Warmup Iteration   5: 6524921.636 ops/s
[info] Iteration   1: 6543354.022 ops/s
[info]                  ·gc.alloc.rate:                                  631.864 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.105 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.025 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            594.128 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       142.922 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   2: 6454527.601 ops/s
[info]                  ·gc.alloc.rate:                                  623.307 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.040 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.010 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            596.136 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       145.374 B/op
[info]                  ·gc.churn.G1_Survivor_Space:                     1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm:                0.487 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 6521308.773 ops/s
[info]                  ·gc.alloc.rate:                                  629.955 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.039 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.009 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            897.467 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       216.547 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   4: 6513204.595 ops/s
[info]                  ·gc.alloc.rate:            628.959 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      598.108 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 144.544 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  1.000 ms
[info] Iteration   5: 6541007.636 ops/s
[info]                  ·gc.alloc.rate:            631.854 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      598.323 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 143.934 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator":
[info]   6514680.525 ±(99.9%) 138566.647 ops/s [Average]
[info]   (min, avg, max) = (6454527.601, 6514680.525, 6543354.022), stdev = 35985.318
[info]   CI (99.9%): [6376113.878, 6653247.173] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator:·gc.alloc.rate":
[info]   629.188 ±(99.9%) 13.544 MB/sec [Average]
[info]   (min, avg, max) = (623.307, 629.188, 631.864), stdev = 3.517
[info]   CI (99.9%): [615.644, 642.732] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.037 ±(99.9%) 0.165 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.105), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.009 ±(99.9%) 0.040 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.025), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.048] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.G1_Old_Gen":
[info]   656.833 ±(99.9%) 518.026 MB/sec [Average]
[info]   (min, avg, max) = (594.128, 656.833, 897.467), stdev = 134.530
[info]   CI (99.9%): [138.807, 1174.858] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   158.664 ±(99.9%) 124.645 B/op [Average]
[info]   (min, avg, max) = (142.922, 158.664, 216.547), stdev = 32.370
[info]   CI (99.9%): [34.020, 283.309] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.097 ±(99.9%) 0.839 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.097, 0.487), stdev = 0.218
[info]   CI (99.9%): [≈ 0, 0.937] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.frawInterpolator:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 6.000), stdev = 1.924
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator
[info] # Run progress: 25.00% complete, ETA 00:01:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4379485.417 ops/s
[info] # Warmup Iteration   2: 6018878.246 ops/s
[info] # Warmup Iteration   3: 6322004.442 ops/s
[info] # Warmup Iteration   4: 6349925.810 ops/s
[info] # Warmup Iteration   5: 6466578.755 ops/s
[info] Iteration   1: 6462802.498 ops/s
[info]                  ·gc.alloc.rate:                                  624.031 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.045 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.011 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            594.082 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       144.705 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 6405216.428 ops/s
[info]                  ·gc.alloc.rate:                   618.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             596.185 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        146.501 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.491 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 6460636.958 ops/s
[info]                  ·gc.alloc.rate:                                  623.885 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.059 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.014 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            598.144 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       145.729 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        2.000 ms
[info] Iteration   4: 6416306.112 ops/s
[info]                  ·gc.alloc.rate:                                  619.632 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            598.180 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       146.738 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        2.000 ms
[info] Iteration   5: 6361679.227 ops/s
[info]                  ·gc.alloc.rate:            614.566 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      598.388 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 147.999 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  1.000 ms
[info] Result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator":
[info]   6421328.245 ±(99.9%) 162323.100 ops/s [Average]
[info]   (min, avg, max) = (6361679.227, 6421328.245, 6462802.498), stdev = 42154.793
[info]   CI (99.9%): [6259005.145, 6583651.344] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator:·gc.alloc.rate":
[info]   620.136 ±(99.9%) 15.278 MB/sec [Average]
[info]   (min, avg, max) = (614.566, 620.136, 624.031), stdev = 3.968
[info]   CI (99.9%): [604.858, 635.414] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.021 ±(99.9%) 0.111 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.059), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.132] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.005 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.014), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.G1_Old_Gen":
[info]   596.996 ±(99.9%) 7.153 MB/sec [Average]
[info]   (min, avg, max) = (594.082, 596.996, 598.388), stdev = 1.858
[info]   CI (99.9%): [589.843, 604.149] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   146.334 ±(99.9%) 4.709 B/op [Average]
[info]   (min, avg, max) = (144.705, 146.334, 147.999), stdev = 1.223
[info]   CI (99.9%): [141.625, 151.043] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.098 ±(99.9%) 0.846 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.098, 0.491), stdev = 0.220
[info]   CI (99.9%): [≈ 0, 0.944] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.fsInterpolator:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 5.000), stdev = 1.643
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.javaStringBuilder
[info] # Run progress: 37.50% complete, ETA 00:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3828247.522 ops/s
[info] # Warmup Iteration   2: 5095282.033 ops/s
[info] # Warmup Iteration   3: 5219704.794 ops/s
[info] # Warmup Iteration   4: 5252327.184 ops/s
[info] # Warmup Iteration   5: 5281804.625 ops/s
[info] Iteration   1: 5285025.095 ops/s
[info]                  ·gc.alloc.rate:                                  1719.203 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.525 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       534.432 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 5279307.796 ops/s
[info]                  ·gc.alloc.rate:                                  1717.356 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.506 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       535.001 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 5273725.974 ops/s
[info]                  ·gc.alloc.rate:                                  1715.468 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.005 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.390 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       535.555 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 5220124.103 ops/s
[info]                  ·gc.alloc.rate:                                  1698.020 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1495.367 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       450.895 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 5328822.368 ops/s
[info]                  ·gc.alloc.rate:                                  1733.633 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.704 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       530.036 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.javaStringBuilder":
[info]   5277401.067 ±(99.9%) 149135.650 ops/s [Average]
[info]   (min, avg, max) = (5220124.103, 5277401.067, 5328822.368), stdev = 38730.055
[info]   CI (99.9%): [5128265.417, 5426536.717] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.javaStringBuilder:·gc.alloc.rate":
[info]   1716.736 ±(99.9%) 48.854 MB/sec [Average]
[info]   (min, avg, max) = (1698.020, 1716.736, 1733.633), stdev = 12.687
[info]   CI (99.9%): [1667.882, 1765.590] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.javaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.003 ±(99.9%) 0.007 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.003, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.javaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1734.698 ±(99.9%) 515.179 MB/sec [Average]
[info]   (min, avg, max) = (1495.367, 1734.698, 1794.704), stdev = 133.790
[info]   CI (99.9%): [1219.519, 2249.878] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.javaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   517.184 ±(99.9%) 142.940 B/op [Average]
[info]   (min, avg, max) = (450.895, 517.184, 535.555), stdev = 37.121
[info]   CI (99.9%): [374.243, 660.124] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.javaStringBuilder:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.javaStringBuilder:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.rawInterpolator
[info] # Run progress: 50.00% complete, ETA 00:01:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1907056.446 ops/s
[info] # Warmup Iteration   2: 3157117.032 ops/s
[info] # Warmup Iteration   3: 3249609.497 ops/s
[info] # Warmup Iteration   4: 3234887.427 ops/s
[info] # Warmup Iteration   5: 3278201.001 ops/s
[info] Iteration   1: 3278546.991 ops/s
[info]                  ·gc.alloc.rate:                                  2066.433 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.586 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1005.035 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 3220555.126 ops/s
[info]                  ·gc.alloc.rate:                                  2030.355 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻³ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2094.139 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1023.164 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   3: 3277384.880 ops/s
[info]                  ·gc.alloc.rate:                                  2065.693 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.760 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1005.478 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   4: 3222580.162 ops/s
[info]                  ·gc.alloc.rate:                                  2030.984 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.005 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.504 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1022.537 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   5: 3252161.283 ops/s
[info]                  ·gc.alloc.rate:                                  2049.612 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.467 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1013.225 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.rawInterpolator":
[info]   3250245.688 ±(99.9%) 108709.614 ops/s [Average]
[info]   (min, avg, max) = (3220555.126, 3250245.688, 3278546.991), stdev = 28231.542
[info]   CI (99.9%): [3141536.074, 3358955.303] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.rawInterpolator:·gc.alloc.rate":
[info]   2048.616 ±(99.9%) 68.190 MB/sec [Average]
[info]   (min, avg, max) = (2030.355, 2048.616, 2066.433), stdev = 17.709
[info]   CI (99.9%): [1980.425, 2116.806] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.rawInterpolator:·gc.alloc.rate.norm":
[info]   992.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (992.000, 992.000, 992.000), stdev = 0.001
[info]   CI (99.9%): [992.000, 992.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.007 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.002, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.rawInterpolator:·gc.churn.G1_Old_Gen":
[info]   2093.691 ±(99.9%) 1.058 MB/sec [Average]
[info]   (min, avg, max) = (2093.467, 2093.691, 2094.139), stdev = 0.275
[info]   CI (99.9%): [2092.633, 2094.749] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.rawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   1013.888 ±(99.9%) 33.919 B/op [Average]
[info]   (min, avg, max) = (1005.035, 1013.888, 1023.164), stdev = 8.809
[info]   CI (99.9%): [979.969, 1047.807] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.rawInterpolator:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.rawInterpolator:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.sInterpolator
[info] # Run progress: 62.50% complete, ETA 00:00:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1839445.293 ops/s
[info] # Warmup Iteration   2: 2965744.496 ops/s
[info] # Warmup Iteration   3: 3039482.303 ops/s
[info] # Warmup Iteration   4: 3007412.598 ops/s
[info] # Warmup Iteration   5: 3036559.326 ops/s
[info] Iteration   1: 3038743.900 ops/s
[info]                  ·gc.alloc.rate:                                  1915.021 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.319 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       929.475 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 2989151.128 ops/s
[info]                  ·gc.alloc.rate:                                  1884.489 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1795.001 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       944.893 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 3075068.033 ops/s
[info]                  ·gc.alloc.rate:                                  1937.924 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.433 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1071.604 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 3066521.101 ops/s
[info]                  ·gc.alloc.rate:                                  1932.493 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.262 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       921.042 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 3088189.309 ops/s
[info]                  ·gc.alloc.rate:                                  1946.444 MB/sec
[info]                  ·gc.alloc.rate.norm:                             992.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2093.723 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1067.060 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.sInterpolator":
[info]   3051534.694 ±(99.9%) 151322.039 ops/s [Average]
[info]   (min, avg, max) = (2989151.128, 3051534.694, 3088189.309), stdev = 39297.853
[info]   CI (99.9%): [2900212.656, 3202856.733] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.sInterpolator:·gc.alloc.rate":
[info]   1923.274 ±(99.9%) 94.495 MB/sec [Average]
[info]   (min, avg, max) = (1884.489, 1923.274, 1946.444), stdev = 24.540
[info]   CI (99.9%): [1828.779, 2017.769] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.sInterpolator:·gc.alloc.rate.norm":
[info]   992.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (992.000, 992.000, 992.000), stdev = 0.001
[info]   CI (99.9%): [992.000, 992.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.005 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.002, 0.004), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.sInterpolator:·gc.churn.G1_Old_Gen":
[info]   1914.148 ±(99.9%) 630.725 MB/sec [Average]
[info]   (min, avg, max) = (1794.262, 1914.148, 2093.723), stdev = 163.797
[info]   CI (99.9%): [1283.423, 2544.872] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.sInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   986.815 ±(99.9%) 291.988 B/op [Average]
[info]   (min, avg, max) = (921.042, 986.815, 1071.604), stdev = 75.828
[info]   CI (99.9%): [694.827, 1278.803] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.sInterpolator:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.sInterpolator:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringBuilder
[info] # Run progress: 75.00% complete, ETA 00:00:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3301153.502 ops/s
[info] # Warmup Iteration   2: 4683522.300 ops/s
[info] # Warmup Iteration   3: 5218736.022 ops/s
[info] # Warmup Iteration   4: 5276758.307 ops/s
[info] # Warmup Iteration   5: 5270093.720 ops/s
[info] Iteration   1: 5283937.958 ops/s
[info]                  ·gc.alloc.rate:                                  1718.644 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.281 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       534.533 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 5285702.413 ops/s
[info]                  ·gc.alloc.rate:                                  1719.849 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.913 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       534.347 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 5262640.911 ops/s
[info]                  ·gc.alloc.rate:                                  1711.686 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.296 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       536.710 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 5260583.052 ops/s
[info]                  ·gc.alloc.rate:            1711.190 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1495.379 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 447.428 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   5: 5236145.779 ops/s
[info]                  ·gc.alloc.rate:                                  1703.503 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.645 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       539.393 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringBuilder":
[info]   5265802.023 ±(99.9%) 78009.065 ops/s [Average]
[info]   (min, avg, max) = (5236145.779, 5265802.023, 5285702.413), stdev = 20258.706
[info]   CI (99.9%): [5187792.958, 5343811.087] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.alloc.rate":
[info]   1712.974 ±(99.9%) 25.393 MB/sec [Average]
[info]   (min, avg, max) = (1703.503, 1712.974, 1719.849), stdev = 6.594
[info]   CI (99.9%): [1687.582, 1738.367] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1734.703 ±(99.9%) 515.163 MB/sec [Average]
[info]   (min, avg, max) = (1495.379, 1734.703, 1794.913), stdev = 133.786
[info]   CI (99.9%): [1219.539, 2249.866] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   518.482 ±(99.9%) 153.152 B/op [Average]
[info]   (min, avg, max) = (447.428, 518.482, 539.393), stdev = 39.773
[info]   CI (99.9%): [365.330, 671.634] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringConcatenation
[info] # Run progress: 87.50% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3992939.131 ops/s
[info] # Warmup Iteration   2: 4970341.294 ops/s
[info] # Warmup Iteration   3: 5196631.271 ops/s
[info] # Warmup Iteration   4: 5324161.380 ops/s
[info] # Warmup Iteration   5: 5258896.191 ops/s
[info] Iteration   1: 5270000.332 ops/s
[info]                  ·gc.alloc.rate:            1714.573 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1794.797 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 535.956 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   2: 5309390.851 ops/s
[info]                  ·gc.alloc.rate:                                  1727.648 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.005 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1795.063 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       531.979 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 5244219.792 ops/s
[info]                  ·gc.alloc.rate:                                  1706.416 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1795.042 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       538.592 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 5308024.964 ops/s
[info]                  ·gc.alloc.rate:                                  1726.518 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1495.326 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       443.440 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 5245487.269 ops/s
[info]                  ·gc.alloc.rate:                                  1706.281 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1794.491 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       538.469 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringConcatenation":
[info]   5275424.642 ±(99.9%) 123519.518 ops/s [Average]
[info]   (min, avg, max) = (5244219.792, 5275424.642, 5309390.851), stdev = 32077.626
[info]   CI (99.9%): [5151905.124, 5398944.159] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.alloc.rate":
[info]   1716.287 ±(99.9%) 40.121 MB/sec [Average]
[info]   (min, avg, max) = (1706.281, 1716.287, 1727.648), stdev = 10.419
[info]   CI (99.9%): [1676.167, 1756.408] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.008 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.churn.G1_Old_Gen":
[info]   1734.944 ±(99.9%) 515.796 MB/sec [Average]
[info]   (min, avg, max) = (1495.326, 1734.944, 1795.063), stdev = 133.951
[info]   CI (99.9%): [1219.148, 2250.740] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm":
[info]   517.687 ±(99.9%) 160.156 B/op [Average]
[info]   (min, avg, max) = (443.440, 517.687, 538.592), stdev = 41.592
[info]   CI (99.9%): [357.532, 677.843] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark_core.StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:02:02
[info] Benchmark                                                                                                   Mode  Cnt        Score        Error   Units
[info] StringConcatenationBenchmarkCore.fInterpolator                                                             thrpt    5   523267.618 ±   5947.040   ops/s
[info] StringConcatenationBenchmarkCore.fInterpolator:·gc.alloc.rate                                              thrpt    5      805.949 ±      9.132  MB/sec
[info] StringConcatenationBenchmarkCore.fInterpolator:·gc.alloc.rate.norm                                         thrpt    5     2424.001 ±      0.001    B/op
[info] StringConcatenationBenchmarkCore.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.006 ±      0.048  MB/sec
[info] StringConcatenationBenchmarkCore.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.017 ±      0.145    B/op
[info] StringConcatenationBenchmarkCore.fInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5      837.515 ±    515.275  MB/sec
[info] StringConcatenationBenchmarkCore.fInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5     2518.168 ±   1531.212    B/op
[info] StringConcatenationBenchmarkCore.fInterpolator:·gc.count                                                   thrpt    5       14.000               counts
[info] StringConcatenationBenchmarkCore.fInterpolator:·gc.time                                                    thrpt    5       13.000                   ms
[info] StringConcatenationBenchmarkCore.frawInterpolator                                                          thrpt    5  6514680.525 ± 138566.647   ops/s
[info] StringConcatenationBenchmarkCore.frawInterpolator:·gc.alloc.rate                                           thrpt    5      629.188 ±     13.544  MB/sec
[info] StringConcatenationBenchmarkCore.frawInterpolator:·gc.alloc.rate.norm                                      thrpt    5      152.000 ±      0.001    B/op
[info] StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.037 ±      0.165  MB/sec
[info] StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.009 ±      0.040    B/op
[info] StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5      656.833 ±    518.026  MB/sec
[info] StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5      158.664 ±    124.645    B/op
[info] StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.G1_Survivor_Space                              thrpt    5        0.400 ±      3.441  MB/sec
[info] StringConcatenationBenchmarkCore.frawInterpolator:·gc.churn.G1_Survivor_Space.norm                         thrpt    5        0.097 ±      0.839    B/op
[info] StringConcatenationBenchmarkCore.frawInterpolator:·gc.count                                                thrpt    5       11.000               counts
[info] StringConcatenationBenchmarkCore.frawInterpolator:·gc.time                                                 thrpt    5       16.000                   ms
[info] StringConcatenationBenchmarkCore.fsInterpolator                                                            thrpt    5  6421328.245 ± 162323.100   ops/s
[info] StringConcatenationBenchmarkCore.fsInterpolator:·gc.alloc.rate                                             thrpt    5      620.136 ±     15.278  MB/sec
[info] StringConcatenationBenchmarkCore.fsInterpolator:·gc.alloc.rate.norm                                        thrpt    5      152.000 ±      0.001    B/op
[info] StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                 thrpt    5        0.021 ±      0.111  MB/sec
[info] StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm            thrpt    5        0.005 ±      0.027    B/op
[info] StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.G1_Old_Gen                                       thrpt    5      596.996 ±      7.153  MB/sec
[info] StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.G1_Old_Gen.norm                                  thrpt    5      146.334 ±      4.709    B/op
[info] StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.G1_Survivor_Space                                thrpt    5        0.400 ±      3.441  MB/sec
[info] StringConcatenationBenchmarkCore.fsInterpolator:·gc.churn.G1_Survivor_Space.norm                           thrpt    5        0.098 ±      0.846    B/op
[info] StringConcatenationBenchmarkCore.fsInterpolator:·gc.count                                                  thrpt    5       10.000               counts
[info] StringConcatenationBenchmarkCore.fsInterpolator:·gc.time                                                   thrpt    5       14.000                   ms
[info] StringConcatenationBenchmarkCore.javaStringBuilder                                                         thrpt    5  5277401.067 ± 149135.650   ops/s
[info] StringConcatenationBenchmarkCore.javaStringBuilder:·gc.alloc.rate                                          thrpt    5     1716.736 ±     48.854  MB/sec
[info] StringConcatenationBenchmarkCore.javaStringBuilder:·gc.alloc.rate.norm                                     thrpt    5      512.000 ±      0.001    B/op
[info] StringConcatenationBenchmarkCore.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'              thrpt    5        0.003 ±      0.007  MB/sec
[info] StringConcatenationBenchmarkCore.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm         thrpt    5        0.001 ±      0.002    B/op
[info] StringConcatenationBenchmarkCore.javaStringBuilder:·gc.churn.G1_Old_Gen                                    thrpt    5     1734.698 ±    515.179  MB/sec
[info] StringConcatenationBenchmarkCore.javaStringBuilder:·gc.churn.G1_Old_Gen.norm                               thrpt    5      517.184 ±    142.940    B/op
[info] StringConcatenationBenchmarkCore.javaStringBuilder:·gc.count                                               thrpt    5       29.000               counts
[info] StringConcatenationBenchmarkCore.javaStringBuilder:·gc.time                                                thrpt    5       21.000                   ms
[info] StringConcatenationBenchmarkCore.rawInterpolator                                                           thrpt    5  3250245.688 ± 108709.614   ops/s
[info] StringConcatenationBenchmarkCore.rawInterpolator:·gc.alloc.rate                                            thrpt    5     2048.616 ±     68.190  MB/sec
[info] StringConcatenationBenchmarkCore.rawInterpolator:·gc.alloc.rate.norm                                       thrpt    5      992.000 ±      0.001    B/op
[info] StringConcatenationBenchmarkCore.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                thrpt    5        0.002 ±      0.007  MB/sec
[info] StringConcatenationBenchmarkCore.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm           thrpt    5        0.001 ±      0.003    B/op
[info] StringConcatenationBenchmarkCore.rawInterpolator:·gc.churn.G1_Old_Gen                                      thrpt    5     2093.691 ±      1.058  MB/sec
[info] StringConcatenationBenchmarkCore.rawInterpolator:·gc.churn.G1_Old_Gen.norm                                 thrpt    5     1013.888 ±     33.919    B/op
[info] StringConcatenationBenchmarkCore.rawInterpolator:·gc.count                                                 thrpt    5       35.000               counts
[info] StringConcatenationBenchmarkCore.rawInterpolator:·gc.time                                                  thrpt    5       28.000                   ms
[info] StringConcatenationBenchmarkCore.sInterpolator                                                             thrpt    5  3051534.694 ± 151322.039   ops/s
[info] StringConcatenationBenchmarkCore.sInterpolator:·gc.alloc.rate                                              thrpt    5     1923.274 ±     94.495  MB/sec
[info] StringConcatenationBenchmarkCore.sInterpolator:·gc.alloc.rate.norm                                         thrpt    5      992.000 ±      0.001    B/op
[info] StringConcatenationBenchmarkCore.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.002 ±      0.005  MB/sec
[info] StringConcatenationBenchmarkCore.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.001 ±      0.002    B/op
[info] StringConcatenationBenchmarkCore.sInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1914.148 ±    630.725  MB/sec
[info] StringConcatenationBenchmarkCore.sInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5      986.815 ±    291.988    B/op
[info] StringConcatenationBenchmarkCore.sInterpolator:·gc.count                                                   thrpt    5       32.000               counts
[info] StringConcatenationBenchmarkCore.sInterpolator:·gc.time                                                    thrpt    5       25.000                   ms
[info] StringConcatenationBenchmarkCore.scalaStringBuilder                                                        thrpt    5  5265802.023 ±  78009.065   ops/s
[info] StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.alloc.rate                                         thrpt    5     1712.974 ±     25.393  MB/sec
[info] StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.alloc.rate.norm                                    thrpt    5      512.000 ±      0.001    B/op
[info] StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'             thrpt    5        0.001 ±      0.004  MB/sec
[info] StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm        thrpt    5       ≈ 10⁻³                 B/op
[info] StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.churn.G1_Old_Gen                                   thrpt    5     1734.703 ±    515.163  MB/sec
[info] StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm                              thrpt    5      518.482 ±    153.152    B/op
[info] StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.count                                              thrpt    5       29.000               counts
[info] StringConcatenationBenchmarkCore.scalaStringBuilder:·gc.time                                               thrpt    5       22.000                   ms
[info] StringConcatenationBenchmarkCore.scalaStringConcatenation                                                  thrpt    5  5275424.642 ± 123519.518   ops/s
[info] StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.alloc.rate                                   thrpt    5     1716.287 ±     40.121  MB/sec
[info] StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.alloc.rate.norm                              thrpt    5      512.000 ±      0.001    B/op
[info] StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'       thrpt    5        0.002 ±      0.008  MB/sec
[info] StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm  thrpt    5        0.001 ±      0.002    B/op
[info] StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.churn.G1_Old_Gen                             thrpt    5     1734.944 ±    515.796  MB/sec
[info] StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm                        thrpt    5      517.687 ±    160.156    B/op
[info] StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.count                                        thrpt    5       29.000               counts
[info] StringConcatenationBenchmarkCore.scalaStringConcatenation:·gc.time                                         thrpt    5       22.000                   ms
[info] Benchmark result is saved to jdk-9_scala-2.13.0-M3.json
[success] Total time: 133 s, completed Mar 23, 2018 1:11:34 PM
